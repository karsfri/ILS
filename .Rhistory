economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var, color = var)) +
geom_area(alpha = 0.5) +
geom_line() +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Area and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y")
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var, color = var)) +
geom_area(alpha = 0.5, color = NA) +
geom_line() +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Area and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y")
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
test_graphs()
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
test_graphs()
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
test_graphs()
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val)) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
axis.line.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), ) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
axis.line.x = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), ) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
axis.line = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), ) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), angle = 90) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), angle = 90, size = 3) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), angle = 90, size = 3, color = "white") +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), angle = 90, size = 3, color = "white", hjust = 1) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
test_graphs()
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
filter(var == "pop") %>%
ggplot(aes(date, val, fill = var)) +
geom_col() +
geom_text(aes(label = val), angle = 90, size = 3, color = "white", hjust = 1) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
# facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
filter(var == "pop") %>%
ggplot(aes(date, val)) +
geom_col() +
geom_text(aes(label = val), angle = 90, size = 3, color = "white", hjust = 1) +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Bars and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
# facet_wrap(~var, scales = "free_y") +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_blank()
)
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
test_graphs()
knitr::opts_chunk$set(
echo = TRUE,
fig.width = width_wide/2.54,
message = FALSE,
warning = FALSE,
include = TRUE,
dpi = 300,
dev.args=list(bg="white")
)
df <- yfirverd()
yfirverd_get_data()
df <- yfirverd()
economics %>%
filter(date == floor_date(date, "year"), year(date) > 2000) %>%
gather(var, val, -date) %>%
ggplot(aes(date, val, fill = var, color = var)) +
geom_area(alpha = 0.5, color = NA) +
geom_line() +
theme_hms() +
scale_color_manual(values = palette_dark) +
scale_y_continuous(labels = label_isl()) +
labs(
title = "Area and stuff",
subtitle = "With HMS colors",
x = NULL,
y = NULL,
caption = "Source: None of your business :P"
) +
facet_wrap(~var, scales = "free_y")
yfirverd_get_data()
df <- yfirverd()
yfirverd(Landshluti, print_plot = FALSE) %>%
plot_yfirverd(title = "This is a title")
df3 <- yfirverd(SerbyliFjolbyli, eftir = "tegund húsnæðis")
df3
df3 %>%     ggplot(aes(x = timi, y = val, fill = var)) +
geom_area(position = position_fill()) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
y = NULL,
x = NULL,
title = title,
subtitle = "-3ja mánaða hlaupandi meðaltal",
caption = "Heimild: Þjóðskrá Íslands, Fasteignaleit, hagdeild HMS"
)
df3
df3 %>%     ggplot(aes(x = timi, y = val, fill = var)) +
geom_area(position = position_fill()) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
y = NULL,
x = NULL,
title = "temp",
subtitle = "-3ja mánaða hlaupandi meðaltal",
caption = "Heimild: Þjóðskrá Íslands, Fasteignaleit, hagdeild HMS"
)
df3 %>%     ggplot(aes(x = timi, y = val, fill = var)) +
geom_area(position = position_fill()) +
scale_y_continuous(labels = scales::percent_format())
df3 %>%     ggplot(aes(x = timi, y = val, fill = var)) +
geom_area(position = position_fill())
df3 %>%     ggplot(aes(x = timi, y = val, fill = var)) +
geom_col(position = position_fill())
df3
df3 %>% View
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
df
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
yfirverd <- function(..., print_plot = TRUE, eftir = NULL, filters = NULL){
require(tidyverse)
require(lubridate)
require(glue)
df <- yfirverd_get_data()
if(NROW(df) == 0) stop("0 rows returned from DB")
my_groups <- enquos(...)
df2 <- df %>%
sql_clean() %>%
# map(filters, ~. %>% filter(!!!.x))
filter(!!!filters) %>%
mutate(timi = floor_date(Dim_Timi_Utgefid, unit = "months")) %>%
group_by(timi, !!!my_groups) %>%
summarise_at(
vars(SeltYfirAuglystuSoluverdi, SeltAAuglystuSoluverdi, SeltUndirAuglystuSoluverdi),
sum,
na.rm = TRUE
) %>%
select(SeltYfirAuglystuSoluverdi, SeltAAuglystuSoluverdi, SeltUndirAuglystuSoluverdi, timi, !!!my_groups) %>%
gather(var, val, SeltYfirAuglystuSoluverdi, SeltAAuglystuSoluverdi, SeltUndirAuglystuSoluverdi) %>%
mutate(
var = var %>%
fct_inorder() %>%
fct_rev %>%
fct_recode(
`Selt undir auglýstu söluverði` = "SeltUndirAuglystuSoluverdi",
`Selt á auglýstu söluverði` = "SeltAAuglystuSoluverdi",
`Selt yfir auglýstu söluverði` = "SeltYfirAuglystuSoluverdi"
)
) %>%
group_by(var) %>%
mutate(val = (val + lag(val) + lag(val, 2)) / 3)
# Plot
eftir <- if_else(is.null(eftir), "", paste0("eftir ", eftir, " "))
title <- glue("Kaupverð íbúða {eftir}í samanburði við ásett verð")
if(print_plot) {
p <- plot_yfirverd(df2, title = title) +
facet_wrap(facets = vars(!!!my_groups))
print(p)
}
return(df2)
}
yfirverd_get_data <- function(){
require(odbc)
require(DBI)
con <- con()
# sql script
query_yfirverd <- "SELECT
[Dim_Timi_Utgefid]
,[Dim_Timi_Thinglyst]
,[Dim_Fasteignir]
,[Faerslunumer]
,[Kaupverd]
,[Kaupverd_nuvirdi]
,[FjoldiFasteigna]
,[FjoldiMatseininga]
,[OnothaefurSamningur]
,[AuglystDags]
,[AuglystSoluverd]
,[Landshluti]
,[Landshlutaflokkun]
,[HofudborgLandsbyggd]
,[SerbyliFjolbyli]
,[FjoldiHerbergja]
,[SeltYfirAuglystuSoluverdi]
,[SeltAAuglystuSoluverdi]
,[SeltUndirAuglystuSoluverdi]
,f.[LOAD_DATE]
,f.[RECORD_SOURCE]
,f.[ETL_ID]
FROM
[HgrDwh].[dwh].[Fact_Kaupsamningar_Stakar] f
INNER JOIN dwh.Dim_Timi dtim
ON f.Dim_Timi_Utgefid = dim_timi_sk
JOIN dwh.Dim_Fasteignir dfst
ON f.Dim_Fasteignir = dfst.Dim_Fasteignir_sk
WHERE
dtim.ar > 2012
ORDER BY
Dim_Timi_Utgefid ASC"
df <- dbGetQuery(con, query_yfirverd)
df %>% as_tibble()
}
con <- function(){
# creates a connection to HgrDwh based on OS
require(odbc)
require(DBI)
library(RJDBC)
if(Sys.info()['sysname'] == "Windows"){
return(dbConnect(odbc(), "HgrDwh_Prod", timeout = 10, encoding = "WINDOWS-1252"))
} else if (Sys.info()['sysname'] == "osx") {
options(java.parameters = "-Xmx8048m")
drv <- JDBC(driverClass="com.microsoft.sqlserver.jdbc.SQLServerDriver", classPath="D:/R/Drivers/mssql-jdbc-7.2.1.jre8.jar")
con <- dbConnect(drv, url="jdbc:sqlserver://localhost;DatabaseName=HgrDwh", user="HgrExtProc", password=Pass)
return(con)
}
stop("OS not detected")
}
plot_yfirverd <- function(df, title = NULL){
df %>%
ggplot(aes(x = timi, y = val, fill = var)) +
geom_area(position = position_fill()) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
y = NULL,
x = NULL,
title = title,
subtitle = "-3ja mánaða hlaupandi meðaltal",
caption = "Heimild: Þjóðskrá Íslands, Fasteignaleit, hagdeild HMS"
)
}
source('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
browser(yfirverd())
require(tidyverse)
require(lubridate)
require(glue)
df <- yfirverd_get_data()
if(NROW(df) == 0) stop("0 rows returned from DB")
my_groups <- enquos(...)
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
# set template
source("https://github.com/karsfri/ILS/raw/master/theme_hms.R")
source("https://github.com/karsfri/ILS/raw/master/demo_automation.R", encoding = "UTF-8")
theme_set_hms() # Sets default theme and default colors for most popular geoms.
library(tidyverse)
# Setup
Sys.setenv(LANGUAGE="is")
Sys.setlocale("LC_TIME", "Icelandic")
knitr::opts_chunk$set(
echo = TRUE,
fig.width = width_wide/2.54,
message = FALSE,
warning = FALSE,
include = TRUE,
dpi = 300,
dev.args=list(bg="white")
)
df <- yfirverd()
debugSource('~/GitHub/ILS/demo_automation.R', encoding = 'UTF-8')
df <- yfirverd()
require(tidyverse)
require(lubridate)
require(glue)
df <- yfirverd_get_data()
if(NROW(df) == 0) stop("0 rows returned from DB")
my_groups <- enquos(...)
df
View(df)
devtools::has_devel()
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
ggplot2::theme_gray
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
theme_hms <- function(tms = 1){
theme_gray() +
theme(
text = element_text(family = "SetimoLight"),
line = element_line(size = 0.3),
rect = element_rect(size = 0.6),
plot.background = element_blank(),
panel.background = element_blank(),
panel.grid.major.y = element_line(colour = color_extra, size = 0.2),
panel.grid.major.x = element_blank(),
strip.text = element_text(family = "SetimoLight", size = 7 * tsm, color = "black", face = "bold"),
strip.text.x = element_text(family = "SetimoLight", size = 7 * tsm, color = "black", face = "bold"),
strip.background = element_blank(),
plot.title = element_text(family = "Setimo", size = 14 * tsm, face = "bold", color = blue),
plot.subtitle = element_text(family = "Setimo", size = 10 * tsm, color = blue),
plot.caption = element_text(family = "SetimoLight", size = 8 * tsm, color = blue, face = "italic"),
axis.title = element_text(size = 7 * tsm),
axis.text = element_text(colour = color_extra, size = 8 * tsm),
legend.text = element_text(colour = color_extra, size = 9 * tsm),
plot.title.position = "plot",
# axis.text.x = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.position = "bottom",
legend.key = element_rect(fill = "transparent"),
legend.key.height = ggplot2::unit(0.4, "cm"),
legend.key.width = ggplot2::unit(0.4, "cm")
# aspect.ratio = 16 / 9
)
}
source('~/GitHub/ILS/theme_hms.R', encoding = 'UTF-8')
